name: OHRI DOCS CI

on:
  push:
    tags:
      - "*"
    branches:
      - "*"

  pull_request:
    branches:
      - "*"
    types: [opened, synchronize]
  release:
    types:
      - created
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Run build
        run: yarn build

  update_config:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.ref == 'refs/heads/dev' }}

    steps:
      - name: Checkout repo to make config folder local
        uses: actions/checkout@v3
        with:
          ref: dev
      - run: ls -la

      - name: Copy Branch Dev Import Map to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ohri-docs/.github/deploy_docs.sh
          remote: /usr/share/tomcat/microfrontends/
          host: ${{ secrets.HISTAC_HOST }}
          username: ${{ secrets.HISTAC_USERNAME }}
          privateKey: ${{ secrets.HISTAC_OHRI_KEY}}
          port: ${{ secrets.HISTAC_PORT }}

  docs_deployment:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.ref == 'refs/heads/dev' }}

    steps:
      # Update the Microfrontends to reflect what we have in the Working branch
      - name: Compute Timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - uses: garygrossgarten/github-action-ssh@release
        name: BackUp and Run the Update DOCS Site Script
        with:
          command: cd /usr/share/tomcat/microfrontends/ && sh deploy-ohri-docs.sh
          host: ${{ secrets.HISTAC_HOST }}
          username: ${{ secrets.HISTAC_USERNAME }}
          privateKey: ${{ secrets.HISTAC_OHRI_KEY}}
          port: ${{ secrets.HISTAC_PORT }}
